ARG PHP_VERSION

FROM php:${PHP_VERSION}-fpm-alpine

MAINTAINER Samusevich Alexander <archer.developer@gmail.com>

ARG ENVIRONMENT=development

ENV COMPOSER_MEMORY_LIMIT=-1 \
    SERVICE_AVAILABLE_DIR=/etc/sv \
    SERVICE_ENABLED_DIR=/etc/service

RUN apk update --update-cache && \
    apk upgrade --available && \
    apk --no-cache add \
       openssh \
       zlib-dev \
       libzip-dev \
       libpng-dev \
       libjpeg-turbo-dev \
       freetype-dev \
       unzip \
       nginx \
       runit \
       git \
    && mkdir -p ${SERVICE_AVAILABLE_DIR} ${SERVICE_ENABLED_DIR}

# Install basic php extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-install -j$(nproc) \
    gd \
    opcache \
    pdo_mysql \
    pcntl \
    calendar \
    bcmath \
    sysvshm \
    sysvsem \
    sysvmsg \
    zip

# Configure runit to run nginx service
RUN mkdir -p "/run/nginx"
RUN mkdir -p "$SERVICE_AVAILABLE_DIR/nginx"
COPY ./nginx/run "$SERVICE_AVAILABLE_DIR/nginx/run"
RUN chmod +x "$SERVICE_AVAILABLE_DIR/nginx/run"
RUN ln -s "$SERVICE_AVAILABLE_DIR/nginx" ${SERVICE_ENABLED_DIR}

# Configure runit to run php-fpm service
RUN mkdir -p "/run/php-fpm"
RUN mkdir -p "$SERVICE_AVAILABLE_DIR/php-fpm"
COPY ./php/run "$SERVICE_AVAILABLE_DIR/php-fpm/run"
RUN chmod +x "$SERVICE_AVAILABLE_DIR/php-fpm/run"
RUN ln -s "$SERVICE_AVAILABLE_DIR/php-fpm" ${SERVICE_ENABLED_DIR}

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
RUN composer --version

# Configure services
RUN rm /usr/local/etc/php-fpm.d/zz-docker.conf
ADD ./php/fpm/www.conf /usr/local/etc/php-fpm.d/
ADD ./php/php.ini-${ENVIRONMENT} /usr/local/etc/php/php.ini
ADD ./nginx/nginx.conf /etc/nginx/nginx.conf
ADD ./nginx/default.conf /etc/nginx/conf.d/default.conf
ADD ./nginx/ssl/nginx-selfsigned.crt /etc/nginx/ssl/nginx-selfsigned.crt
ADD ./nginx/ssl/nginx-selfsigned.key /etc/nginx/ssl/nginx-selfsigned.key

RUN rm -rf /var/www/html && \
    rm -rf /var/www/localhost

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/nginx/access.log && \
	ln -sf /dev/stderr /var/log/nginx/error.log

EXPOSE 443/tcp 80/tcp

STOPSIGNAL SIGTERM

# Replace default entrypoint and cmd
CMD []

ADD ./entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

WORKDIR /var/www/app

ENTRYPOINT ["/entrypoint.sh"]
